# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Create secret directory
      run: mkdir -p src/main/jib/src/main/resources
    - name: Create secret file
      run: echo "telegram.token=${{ secrets.TELEGRAM_TOKEN}}" > src/main/jib/src/main/resources/telegram.properties
    - name: Add bot name
      run: echo "telegram.name=${{secrets.TELEGRAM_NAME}}" >> src/main/jib/src/main/resources/telegram.properties
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: project
    - name: Show extracted Maven project version
      run: echo ${{ steps.project.outputs.version }}
    - name: build docker container
      run: | 
        mvn jib:build -f pom.xml \
        -Djib.to.image=registry.hub.docker.com/${{ secrets.DOCKER_HUB_USERNAME }}/schedule:${{ steps.project.outputs.version }} \
        -Djib.to.auth.username=${{ secrets.DOCKER_HUB_USERNAME }} \
        -Djib.to.auth.password=${{ secrets.DOCKER_HUB_PASSWORD }}


